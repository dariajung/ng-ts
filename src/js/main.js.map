{"version":3,"sources":["main.ts"],"names":["Transpiler","Transpiler.constructor","Transpiler.createCompilerHost"],"mappings":"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","file":"main.js","sourcesContent":["///<reference path=\"../typings/node/node.d.ts\"/>\n///<reference path=\"../typings/typescript.d.ts\"/>\n\nimport ts = require('typescript');\nimport fs = require('fs'); // filesystem module\nimport util = require('util');\nimport path = require('path');\n//import process = require('process');\n\nexport const COMPILER_OPTIONS: ts.CompilerOptions = {\n\tallowNonTsExtensions: true,\n\tmodule: ts.ModuleKind.CommonJS,\n\ttarget: ts.ScriptTarget.ES5,\n};\n\n/* TranspilerOptions Class will go here */\n\n\n/* The Transpiler Class */\nexport class Transpiler {\n\tprivate output: string; // for now, what is an output object?\n\tprivate currentFile: ts.SourceFile;\n\n\t// last comment index?\n\tprivate errors: string[] = [];\n\n\t//private transpilers;\n\n\tconstructor() {\n\n\t} \n\n\t// (Transpiler options here when I know what's needed) \n\t\n\t// will instantiate different transpilers; nothing here yet\n\n\t/* Create a Transpiler Class */\n\tcreateCompilerHost(fileNames: string[], options?: ts.CompilerOptions) {\n\t\tconsole.log(\"create compiler host\");\n\t\tconsole.log(fileNames);\n\n\t\t// why is this needed? rather, what is the point?\n\t\tvar fileMap: { [s: string]: boolean } = {};\n\t\tfileNames.forEach((f) => fileMap[f] = true); // why?\n\n\t\t// sanity check that given files actually exist\n\t\tfileNames.forEach((fpath) => {\n\t\t\tfs.exists(fpath, function(exists) {\n\t\t\t\tconsole.log(fpath + \": \")\n\t\t\t\tconsole.log(exists ? \"exists\" : \"nope :(\");\n\t\t\t});\n\t\t});\n\n\t\t// methods for the Compiler Host\n\t\treturn {\n\t\t\tgetSourceFile: (sourceName, languageVersion) => {\n\t\t\t\tconsole.log('does this occur');\n\t\t\t\tif (fileMap.hasOwnProperty(sourceName)) {\n\t\t\t\t\tvar contents = fs.readFileSync(sourceName, 'UTF-8');\n\t\t\t\t\tconsole.log(contents);\n\t\t\t\t\treturn ts.createSourceFile(sourceName, contents, COMPILER_OPTIONS.target, \"0\");\n\t\t\t\t} \n\t\t\t\tif (filename === \"lib.d.ts\")\n\t\t\t\t\treturn ts.createSourceFile(filename, '', compilerOptions.target, \"0\");\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\twriteFile: function(name, text, writeByteOrderMark) {\n\t\t\t\tfs.writeFile(name, text);\n\t\t\t},\n\t\t\tgetDefaultLibFilename: function() { return \"lib.d.ts\"; },\n\t\t\tuseCaseSensitiveFileNames: function() { return true; },\n\t\t\tgetCanonicalFileName: function(filename) { return filename; },\n\t\t\tgetCurrentDirectory: function() { return \"\"; },\n\t\t\tgetNewLine: function() { return \"\\n\"; }\n\t\t};\n\t}\n}\n\nvar host = new Transpiler();\nhost.createCompilerHost(['test/hello.ts']);\n"],"sourceRoot":"/source/"}